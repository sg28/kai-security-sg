import { FilterOptions, Vulnerability } from '../types/vulnerability';

export async function loadVulnerabilityData(): Promise<Vulnerability[]> {
  try {
    const response = await fetch('https://raw.githubusercontent.com/chanduusc/Ui-Demo-Data/main/ui_demo.json');
    const data = await response.json();
    return data.vulnerabilities || [];
  } catch (error) {
    console.error('Error loading vulnerability data:', error);
    return [];
  }
}

export function filterVulnerabilities(
  data: Vulnerability[],
  filters: FilterOptions
): Vulnerability[] {
  return data.filter(vuln => {
    // Implement filtering logic
    if (filters.severity && !filters.severity.includes(vuln.severity)) return false;
    if (filters.kaiStatus && !filters.kaiStatus.includes(vuln.kaiStatus)) return false;
    if (filters.packageName && !vuln.packageName.includes(filters.packageName)) return false;
    if (filters.minRiskScore && vuln.riskScore < filters.minRiskScore) return false;
    return true;
  });
}