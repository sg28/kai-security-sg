import { useState } from 'react';
import { Grid, Paper, Button, GridProps } from '@mui/material';
import { VulnerabilityList } from '../vulnerability/VulnerabilityList';
import { SeverityChart } from './SeverityChart';
import { FilterPanel } from './FilterPanel';
import { useVulnerabilities } from '../../hooks/useVulnerabilities';
import { filterVulnerabilities } from '../../utils/dataProcessor';
import { FilterOptions } from '../../types/vulnerability';

export function Dashboard() {
  const { data: vulnerabilities = [], isLoading } = useVulnerabilities();
  const [filters, setFilters] = useState<FilterOptions>({});

  const handleAnalysisFilter = () => {
    setFilters(prev => ({
      ...prev,
      kaiStatus: prev.kaiStatus?.filter(s => s !== 'invalid - norisk') || ['invalid - norisk']
    }));
  };

  const handleAIAnalysisFilter = () => {
    setFilters(prev => ({
      ...prev,
      kaiStatus: prev.kaiStatus?.filter(s => s !== 'ai-invalid-norisk') || ['ai-invalid-norisk']
    }));
  };

  const filteredData = filterVulnerabilities(vulnerabilities, filters);

  // Define Grid props with a type that includes 'item'
  const gridItemProps = { item: true, xs: 12, md: 3, component: 'div' } as GridProps;
  const gridItemProps2 = { item: true, xs: 12, md: 9, component: 'div' } as GridProps;

  return (
    <Grid container spacing={3}>
      <Grid {...gridItemProps}>
        <Paper>
          <FilterPanel filters={filters} onFilterChange={setFilters} />
          <Button onClick={handleAnalysisFilter} variant="contained" sx={{ m: 1 }}>
            Analysis
          </Button>
          <Button onClick={handleAIAnalysisFilter} variant="contained" sx={{ m: 1 }}>
            AI Analysis
          </Button>
        </Paper>
      </Grid>
      <Grid {...gridItemProps2}>
        <Paper>
          <SeverityChart data={filteredData} />
        </Paper>
        <Paper sx={{ mt: 3 }}>
          <VulnerabilityList data={filteredData} isLoading={isLoading} />
        </Paper>
      </Grid>
    </Grid>
  );
}